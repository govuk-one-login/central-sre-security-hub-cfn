name: PR To Main
# When a PR is opened, synchronize, or reopened this workflow will run.
# Make sure the service catalog templates are checkov and security hub complaint.
# Taskcat validates and   

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
jobs:
  lint-and-validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4


      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.GH_ACTIONS_ROLE }}
          aws-region: eu-west-2
      
      - name: Validate CloudFormation templates
        run: |
          for f in $(find ./service_catalog_portfolios -name '*.yaml')
          do
            echo 
            aws cloudformation validate-template --template-body file://$f
          done
      
      - name: Run Checkov
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: service_catalog_portfolios/
          quiet: true 
          skip_check: CKV_AWS_111,CKV_AWS_173,CKV_AWS_158,CKV_AWS_27
          framework: cloudformation
      
      - name: Generate and apply hash
        run: |
          hash=$(tr -dc 'a-z0-9' </dev/urandom | head -c 13; echo)
          echo $hash
          sed -i "s/<hash-place-holder>/$hash/g" .taskcat.yml
          sed -i "s/<hash-place-holder>/$hash/g" infrastructure/build/scripts/run_taskcat.sh

      - name: Install TaskCat
        run: |
          pip install taskcat

      - name: Run TaskCat
        run: |
          ./infrastructure/build/scripts/run_taskcat.sh
      
      - name: Get terraform version
        id: terraform-version
        run: |
          cat infrastructure/integration/terraform/deployments/service-catalog-share/.terraform-version > TF_VERSION
          echo "tf_version=$TF_VERSION" >> "$GITHUB_OUTPUT"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ steps.terraform-version.outputs.tf_version }}
  
      - name: Share Portfolios terraform valid
        run: |
          cd infrastructure/integration/terraform/deployments/service-catalog-share
          terraform init -input=false -backend=false
          terraform validate

      - name: Service Catalog terraform valid
        run: |
          cd infrastructure/integration/terraform/deployments/service-catalog
          terraform init -input=false -backend=false
          terraform validate

      - name: Service Catalog pipeline dependencies terraform valid
        run: |
          cd infrastructure/integration/terraform/deployments/pipeline-dependencies
          terraform init -input=false -backend=false
          terraform validate

      - name: Test pipelines terraform valid
        run: |
          cd infrastructure/build/terraform/deployments/service-catalog-product-tests/pipeline-dependencies
          terraform init -input=false -backend=false
          terraform validate

