AWSTemplateFormatVersion: "2010-09-09"
#Base case one primary key
Description: >
  central-sre-security-hub-cfn dynamo template version: v0.0.1
  Enforces: security hub rule(s) 
  - DYDB01
  - DYDB02
  - DYDB09
  - DYDB10
  - ADR 0134
  - DYDB03 
  - DYDB04 
  - DYDB05
  - DYDB11
  - SCRTS01
  - SCRTS03
  - SCRTS05.
  Supports: security hub rule(s) SCRTS04. 
  Managed by: central-sre.

Parameters:
  ProvisionedThroughputEnabled:
    Description: Enabling the database to be running in provisioned throughput mode.
    Default: false
    Type: String
    AllowedValues:
         - true
         - false

  # Dynamo Naturally throttles reads on 40k per table and 80k per account
  ReadCapacityUnits:
    Description: The maximum number of strongly consistent reads consumed per second before DynamoDB returns a ThrottlingException.
    Type: Number
    Default: 300
    MinValue: 100
    MaxValue: 20000 

  # Dynamo Naturally throttles writes on 40k per table and 80k per account
  WriteCapacityUnits: 
    Description: The maximum number of writes consumed per second before DynamoDB returns a ThrottlingException.
    Type: Number
    Default: 300  
    MinValue: 100 
    MaxValue: 20000 

  PrimaryKeyName:
    Description: The Name of your primary key for the table. Must be defined as a list.
    Type: String
    Default: "id"
    MinLength: 1
    MaxLength: 255

  PrimaryKeyType:
    Description: List of the primary key types for the table. Must be defined as a list.
    Type: String
    Default: "S"
    AllowedValues:
         - "S"
         - "N"
         - "B"
  
  TimeToLiveEnabled:
    Type: String
    Default: true
    Description: Do you want to enable time to live for this table?
    AllowedValues:
      - true
      - false

  KeyLogRetention:
    Type: Number
    Default: 365
    Description: The retention for your cloud trail logs on the api key usage. 365 days as a default.
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1096, 1827, 2192, 2557, 2922, 3288, 3653]

  TimeToLiveColumnName:
    Type: String
    Default: "TTL"
    Description: "Name of the time to live column."

  PointInTimeRecoveryEnabled:
    Type: String
    Default: true
    Description: Do you want to enable point in time recovery?
    AllowedValues:
      - true
      - false

  Product:
    Type: String
    Default: GOV.UK
    Description: Tag all your resources with the product name.

  System:
    Type: String
    Default: Central SRE - test service
    Description: Tag all your resources with the service name.

  Environment:
    Type: String
    Default: dev
    Description: Tag the environment to all your resources.

  CloudTrailLogBucket:
    Type: String
    Default: testbucketnameplsdeleteme

  Owner:
    Type: String
    Default: Central SRE
    Description: Tag all your resources with the team name.

  LogGroupClass:
    Type: String
    Default: STANDARD
    Description: Switch to INFREQUENT_ACCESS if you want to save on cost. 

Resources:
  DynamoDB:
    DeletionPolicy: Delete
    UpdateReplacePolicy:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: !Ref PrimaryKeyName
          AttributeType: !Ref PrimaryKeyType
      KeySchema:
        - AttributeName: !Ref PrimaryKeyName
          KeyType: "HASH"
      BillingMode: !If
        - ProvisionedThroughputEnabled
        - "PROVISIONED"
        - "PAY_PER_REQUEST"
      ProvisionedThroughput:
        ReadCapacityUnits: !If [!Ref ProvisionedThroughputEnabled, !Ref ReadCapacityUnits, 0]
        WriteCapacityUnits: !If [!Ref ProvisionedThroughputEnabled, !Ref WriteCapacityUnits, 0]
      TableName: !Ref DynamoName
      TimeToLiveSpecification:
        AttributeName: !Ref TimeToLiveColumnName
        Enabled: !Ref TimeToLiveEnabled
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: !Ref PointInTimeRecoveryEnabled
      SSESpecification:
        KMSMasterKeyId: !GetAtt DynamoKey.id
        SSEEnabled: true
        SSEType: KMS
      StreamSpecification:
        StreamViewType: NEW_IMAGE
    Tags:
      - Key: Name
        Value: !Sub "${AWS::StackName}"
      - Key: Product
        Value: !Ref Product
      - Key: System
        Value: !Ref System
      - Key: Environment
        Value: !Ref Environment
      - Key: Owner
        Value: !Ref Owner

#template to prepare to use KMS nested stack from SW-146
  DynamoKeyModule:
    Type: 'AWS::CloudFormation::Stack'
    DeletionPolicy: Retain
    Properties:
      TemplateURL: >-
        https://s3.amazonaws.com/###.template
      Parameters:
        Environment: !Ref Environment
        AllowedAccounts: ''
        AlertStack: ''
        Service: cloudtrail
        KeySpec: SYMMETRIC_DEFAULT
        KeyUsage: ENCRYPT_DECRYPT
  
  # DynamoKey:
  #   Type: AWS::KMS::Key
  #   Properties:
  #     Description: !Sub "${!Ref TableName} -  table key"
  #     Enabled: true
  #     KeySpec: SYMMETRIC_DEFAULT
  #     KeyUsage: ENCRYPT_DECRYPT
  #     MultiRegion: false
  #     PendingWindowInDays: !Ref KmsPendingWindowInDays
  #     EnableKeyRotation: true
  #     KeyPolicy:
  #       Version: "2012-10-17"
  #       Statement:
  #         - Sid: "Allow the account to manage the key"
  #           Effect: Allow
  #           Principal:
  #             AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
  #           Action: "kms:*"
  #           Resource: "*"
  #   Tags:
  #     - Key: Name
  #       Value: !Sub "${AWS::StackName}"
  #     - Key: Product
  #       Value: !Ref Product
  #     - Key: System
  #       Value: !Ref System
  #     - Key: Environment
  #       Value: !Ref Environment
  #     - Key: Owner
  #       Value: !Ref Owner

  # DynamoKeyAlias:
  #   Type: AWS::KMS::Alias
  #   Properties:
  #     AliasName: !Sub "alias/${AWS::StackName}-table-key"
  #     TargetKeyId: !GetAtt DynamoKey.id

# cloud watch log groups on the key
  CloudTrailLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupClass: !Ref LogGroupClass
      LogGroupName: !Sub '/aws/cloudtrail/${AWS::StackName}'
      RetentionInDays: !Ref KeyLogRetention
    Tags:
      - Key: Name
        Value: !Sub "${AWS::StackName}"
      - Key: Product
        Value: !Ref Product
      - Key: System
        Value: !Ref System
      - Key: Environment
        Value: !Ref Environment
      - Key: Owner
        Value: !Ref Owner

  CloudTrail:
    Type: 'AWS::CloudTrail::Trail'
    Properties:
      TrailName: !Sub '${AWS::StackName}-CloudTrail-Dynamo-Key'
      IsLogging: true
      IncludeGlobalServiceEvents: true
      KmsKeyId: !GetAtt DynamoKeyModule.Outputs.KeyArn #KMSKey.Arn 
      S3BucketName: !Ref CloudTrailLogBucket
      CloudWatchLogsLogGroupArn: !GetAtt CloudTrailLogGroup.Arn
      CloudWatchLogsRoleArn: !GetAtt CloudTrailLogRole.Arn
    Tags:
      - Key: Name
        Value: !Sub "${AWS::StackName}"
      - Key: Product
        Value: !Ref Product
      - Key: System
        Value: !Ref System
      - Key: Environment
        Value: !Ref Environment
      - Key: Owner
        Value: !Ref Owner
  #Refer to s3 Template here to follow best practice SW-126
  # CloudTrailLogBucket:
  #   Type: AWS::S3::Bucket

#Iam role for the cloudtrail log group to enable it to deliver log to the log group
  CloudTrailLogRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub '${AWS::StackName}-CloudTrail-Log-Role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: sts:AssumeRole
      # Policies:
        # - PolicyName: CloudTrailLogPolicy
        #   PolicyDocument:
        #     Version: '2012-10-17'
        #     Statement:
        #       - Effect: Allow
        #         Action:
        #           - logs:CreateLogGroup
        #           - logs:CreateLogStream
        #           - logs:PutLogEvents
        #         Resource: !GetAtt CloudTrailLogGroup.Arn
  CloudTrailPolicy:
    Type: AWS::IAM::RolePolicy
    Properties:
      PolicyName: CloudTrailLogPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: !GetAtt CloudTrailLogGroup.Arn
      RoleName: !Ref CloudTrailLogRole

Outputs:
  TableName:
    Description: "The name of the DynamoDB table"
    Value: !Ref DynamoDB
    Export:
      Name: !Sub "${AWS::StackName}-table-name"
  TableArn:
    Description: "The Arn of the DynamoDB table"
    Value: !GetAtt DynamoDB.Arn
    Export:
      Name: !Sub "${AWS::StackName}-table-arn"
  TableKeyArn:
    Description: "The Arn of the table encryption key"
    Value: !GetAtt DynamoKeyModule.KeyArn
    Export:
      Name: !Sub "${AWS::StackName}-dynamo-key-arn"
  TableKeyId:
    Description: "The Id of the Events table encryption key"
    Value: !GetAtt DynamoKeyModule.KeyId
    Export:
      Name: !Sub "${AWS::StackName}-dynamo-key-id"
  CloudTrailLogGroupName:
    Description: Name of the log group in cloud trail that is used to monitor KMS key usage for this dynamo table.
    Value: !Ref CloudTrailLogGroup
    Export:
      Name: !Sub "${AWS::StackName}-cloudtrail-loggroup-name"
      
Metadata: 
  AWS::CloudFormation::Interface: 
    ParameterGroups:
      - Label:
          default: "Manditory Tags"
        Parameters: 
          - Product
          - System
          - Environment
          - Owner